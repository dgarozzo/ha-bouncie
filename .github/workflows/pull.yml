name: Pull actions

on:
  pull_request:

jobs:
  validate:
    runs-on: "ubuntu-latest"
    name: Validate
    steps:
      - uses: actions/checkout@v3

      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"
          ignore: brands

      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"

  style:
    runs-on: "ubuntu-latest"
    name: Check style formatting
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: python3 -m pip install black
      - run: black .
  cache-requirements-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements_test.txt
  tests:
    needs: cache-requirements-install
    runs-on: "ubuntu-latest"
    name: Run tests
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Restore pip cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: python3 -m pip install -r requirements_test.txt
      - name: Run tests
        run: run-ci.sh
